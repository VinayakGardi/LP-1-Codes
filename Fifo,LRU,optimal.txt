FIFO::

import java.util.*;

public class FIFO {

    public static void main(String args[]) {

//        int incomingStream[] = {2, 3, 2, 1, 5, 2, 4, 5, 3, 2, 5, 2};
        int incomingStream[] = {1,2,3,4,1,2,5,1,2,3,4,5};
        int pageFaults = 0;
        int pages = incomingStream.length;
        int top = 0;
        int frames = 3;

        int flag;
        int temp[] = new int[frames];

        for (int i = 0; i < frames; i++) {
            temp[i] = -1;
        }
        System.out.println("\n Frame 1 \t Frame 2 \tFrame 3");
        
        
//        case 1 hit
        for (int i = 0; i < pages; i++) {
            flag = 0;
            for (int j = 0; j < frames; j++) {

                if (temp[j] == incomingStream[i]) {
                    flag = 1;
                    break;
                }
            }
            
            
            // case 2 & 3 - pageFault  free space no space
            
            if(flag == 0){
                
                temp[top] = incomingStream[i];
                top++;
                pageFaults++;
                
                if(top >= frames){
                    top = 0;
                }
            }
            
            System.out.println();
            for(int j = 0;j<frames;j++){
                
                if(temp[j] != -1){
                    System.out.print(temp[j]+"\t\t");
                }
                else{
                    System.out.print("-\t\t");
                    
                }
            }
        }


        System.out.println("\n\n\tTotal Page Faults: "+ pageFaults);
    }
}


LRU::

import java.util.*;




public class LRU {

    static int LRU(int time[],int f){
        
        int min = time[0];
        int pos = 0;
        
        for(int i =1; i < f;i++){
            if(time[i] < min){
                min = time[i];
                pos = i;
            }
        }
        
        
        return pos;
    }
    
    
    public static void main(String[] args) {

        
        
        int incomingStream[] = {2, 3, 2, 1, 5, 2, 4, 5, 3, 2, 5, 2};
        int frames = 3;
        int pages = incomingStream.length;
        
        int Frame[] = new int[frames];
        int pageFault = 0;
        
        int time[] = new int[frames];
        int counter = 0;
        
        int flag1,flag2;
        int pos =0;
        
        for(int i = 0;i<frames;i++){
            Frame[i] = -1;
        }
        
        //case 1: page Hit
        System.out.println("Frame 1 \t Frame 2 \t Frame 3");
        for(int i = 0;i<pages;i++){
            
            flag1 = flag2 = 0;
            for(int j = 0;j<frames;j++){
                
                if(Frame[j] == incomingStream[i]){
                    
                    counter++;
                    time[j] = counter;
                    flag1 = flag2 = 1;
                    break;
                }
                
            }
            
            // case 2 PageFault free space
            if(flag1 == 0){
                
                for(int j = 0;j<frames;j++){
                    
                    if(Frame[j] == -1){
                        Frame[j] = incomingStream[i];
                        flag2 =1;
                        counter++;
                        pageFault++;
                        time[j] = counter;
                        break;
                    }
                    
                }
                
            }
            
            // case 3 Page fault and no free space...
            
            if(flag2 ==0){
                
                pos = LRU(time,frames);
                counter++;
                pageFault++;
                Frame[pos] = incomingStream[i];
                time[pos] = counter;
                
                
                
            }
            
            System.out.println("\t");
            for(int j = 0;j<frames;j++){
                System.out.print(Frame[j]+"\t\t");
            }
        }
        System.out.println("\n\n Total Page Faults: "+pageFault);
    }

}


Optimal::

import java.util.*;

public class Optimal {
    public static void main(String[] args) {
        // TODO code application logic here

        int incomingStream[] = {2, 3, 2, 1, 5, 2, 4, 5, 3, 2, 5, 2};
//        int incomingStream[] = {2,3,4,2,1,3,7,5,4,3};
        int pageFaults = 0;
        int frames = 3;
        int pages = incomingStream.length;

        int flag1, flag2, flag3;
        int max, pos = 0;
        int Frames[] = new int[frames];
        int temp[] = new int[frames];

        for (int i = 0; i < frames; i++) {
            Frames[i] = -1;
        }

//        for
        for (int i = 0; i < pages; i++) {

            flag1 = flag2 = 0;

            for (int j = 0; j < frames; j++) {

                if (Frames[j] == incomingStream[i]) {

                    flag1 = flag2 = 1;
                    break;
                }

            }
            
            if(flag1 == 0){
                
                for(int j =0;j<frames;j++){
                    if(Frames[j] == -1){
                        pageFaults++;
                        Frames[j] = incomingStream[i];
                        flag2 = 1;
                        break;
                    }
                }
                
            }
            
            if(flag2 == 0){
                flag3 = 0;
                
                for(int j = 0; j<frames;j++){
                    
                    temp[j] = -1;
                    
                    for(int k = i+1; k<pages;k++){
                        
                        if(Frames[j] == incomingStream[k]){
                            temp[j] = k;
                            break;
                        }
                    }
                }
                
                for(int j = 0;j< frames;j++){
                    
                    if(temp[j] == -1){
                        pos = j;
                        flag3 = 1;
                        break;
                    }
                }
                
                if(flag3 == 0){
                    
                    max = temp[0];
                    pos = 0;
                    
                    for(int j =1;j<frames;j++){
                        
                        if(temp[j] > max){
                            max = temp[j];
                            pos = j;
                        }
                    }
                }
                
                Frames[pos] = incomingStream[i];
                
            }

            System.out.println();
            for(int j = 0;j<frames;j++){
                System.out.print(Frames[j] + "\t");
            }
        }
        
        System.out.println("\n\nTotal Page Faults : "+ pageFaults);

    }

}
